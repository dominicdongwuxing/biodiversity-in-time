type Query {
    getFossilsDuringMya (
        minma: Float,
        maxma: Float
    ): [Fossil]

    getMapAtMya (
        mya: Int,
    ): Map

    getTreeFromWikiNameOrIdWithMya (
        name: String, maxElement: Int, depth: Int, id: String, minma: Float, maxma: Float
    ): Tree
}

type Fossil {
    wikiRef: ID!
    minma: Float!
    maxma: Float!
    coordinates: [[Float!]]
}

type Wiki {
    name: String!
    rank: String!
    id: ID!
    pathFromRootById: String!
    pathFromRootByName: String!
    pathFromRootByRank: String!
    children: [String]
    count: Int!
    maxma: Float!
    minma: Float!
}

type Tree {
    name: String!
    rank: String!
    id: ID!
    count: Int!
    pathFromRootByName: String
    pathFromRootById: String
    pathFromRootByRank: String
    children: [Tree]
}

type MapGeometryPolygon {
    type: String
    coordinates: [[[Float]]] 
}

type MapGeometryMultiPolygon {
    type: String
    coordinates: [[[[Float]]]]
}

union MapGeometryUnion = MapGeometryPolygon | MapGeometryMultiPolygon

type Map {
    mya: Int,
    type: String,
    features: [MapFeature]
}

type MapFeature {
    type: String
    properties: MapProperty
    geometry: MapGeometryUnion
}

type MapProperty {
    name: String
}


