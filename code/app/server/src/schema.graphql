type Query {
    getFlatTreeByUniqueNameWithMya (
        uniqueName: String, minma: Float, maxma: Float, maxElement: Int, depth: Int
    ): FlatTree

    getFossilLocationFromTreeWithMya (
        flatTree: [FlatTreeElementForSearch], mya: Int, minma: Float, maxma: Float
    ): [FossilLocation]
}

input FlatTreeElementForSearch {
    leaf: Boolean!
    uniqueName: String!
    pathFromRoot: String!
    color: String
    fossils: [String]
}

type FlatTree {
    pathFromRoot: String!
    treeNodes: [TreeNode]
}

type TreeNode {
    name: String!
    uniqueName: String!
    rank: String!
    pathFromRoot: String!
    wikiRef: String
    parent: String
    count: Int!
    fossilCountIdentifiedToName: Int!
    maxma: Float!
    minma: Float!
    children: [String]
    leaf: Boolean
    fossils: [String]
}

type FossilPoint {
    id: String!
    uniqueName: String!
    maxma: Float!
    minma: Float!
    pathFromRoot: String!
}

type FossilLocation {
    id: String!
    mya: Int!
    coordinate: [Float!]!
    uniqueName: String
}